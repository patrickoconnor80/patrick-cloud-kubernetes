---
apiVersion: v1
kind: Namespace
metadata:
  name: dbt
  labels:
    istio-injection : enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dbt
  name: deployment-dbt
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-dbt-docs
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-dbt-docs
    spec:
      containers:
      - name: app-dbt-docs
        image: 948065143262.dkr.ecr.us-east-1.amazonaws.com/patrick-cloud-dev-dbt-docs:6d55c6d3
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
        - name: DATABRICKS_TOKEN
          valueFrom:
            secretKeyRef:
              name: databricks-token
              key: DATABRICKS_TOKEN_
        - name: DATABRICKS_HOST
          valueFrom:
            secretKeyRef:
              name: databricks-host
              key: DATABRICKS_HOST
        - name: DATABRICKS_SQL_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: databricks-sql-endpoint
              key: DATABRICKS_SQL_ENDPOINT
---
apiVersion: v1
kind: Service
metadata:
  namespace: dbt
  name: service-dbt-docs
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: app-dbt-docs

##  Databricks Secrets ## 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: dbt
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::948065143262:role/patrick-cloud-dev-eks-dbt-external-secrets-sa-role

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secretsmanager
  namespace: dbt
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-token
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-token
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_TOKEN_
    remoteRef:
      key: DATABRICKS_TOKEN_
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-host
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-host
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_HOST
    remoteRef:
      key: DATABRICKS_HOST
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-sql-endpoint
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-sql-endpoint
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_SQL_ENDPOINT
    remoteRef:
      key: DATABRICKS_SQL_ENDPOINT

## ISTIO Virtual Service ##
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: dbt-vs
  namespace: dbt
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: dbt-docs
    match:
    - uri:
        prefix: "/dbt-docs/"
    rewrite:
       uri: "/"
    route:
    - destination:
        port:
          number: 80
        host: service-dbt-docs.dbt.svc.cluster.local