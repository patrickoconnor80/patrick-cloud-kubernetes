##  Grafana Secrets ##
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: monitoring
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::948065143262:role/patrick-cloud-eks-external-secrets-sa-role
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secretsmanager
  namespace: monitoring
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-credentials
  namespace: monitoring
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: grafana-credentials
    creationPolicy: Owner
  data:
  - secretKey: grafana_username
    remoteRef:
      key: GRAFANA_CREDENTIALS
      property: username
  - secretKey: grafana_password
    remoteRef:
      key: GRAFANA_CREDENTIALS
      property: password


##  Databricks Secrets ## 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: dbt
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::948065143262:role/patrick-cloud-eks-external-secrets-sa-role

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secretsmanager
  namespace: dbt
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-token
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-token
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_TOKEN_
    remoteRef:
      key: DATABRICKS_TOKEN_
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-host
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-host
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_HOST
    remoteRef:
      key: DATABRICKS_HOST
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: databricks-sql-endpoint
  namespace: dbt
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: databricks-sql-endpoint
    creationPolicy: Owner
  data:
  - secretKey: DATABRICKS_SQL_ENDPOINT
    remoteRef:
      key: DATABRICKS_SQL_ENDPOINT