# apiVersion: networking.istio.io/v1beta1
# kind: ServiceEntry
# metadata:
#   name: kubernetes.patrick-cloud.com
# spec:
#   hosts:
#     - "kubernetes.patrick-cloud.com"
#   ports:
#     - number: 80
#       name: http
#       protocol: HTTP
#     - number: 443
#       name: https-443
#       protocol: HTTPS
#   location: MESH_EXTERNAL
#   resolution: DNS
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: patrick-cloud-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingress
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
    tls:
      httpsRedirect: true # sends 301 redirect for http requests
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: patrick-cloud-certs
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana-vs
  namespace: monitoring
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: grafana
    match:
    - uri:
        prefix: "/grafana/"
    rewrite:
       uri: "/"
    route:
    - destination:
        port:
          number: 80
        host: grafana.monitoring.svc.cluster.local
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prometheus-vs
  namespace: monitoring
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: prometheus
    match:
    - uri:
        prefix: "/prometheus/"
    rewrite:
       uri: "/"
    route:
    - destination:
        port:
          number: 80
        host: prometheus-server.monitoring.svc.cluster.local
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kiali-vs
  namespace: monitoring
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: kiali
    match:
    - uri:
        prefix: "/kiali/"
    rewrite:
       uri: "/kiali/"
    route:
    - destination:
        port:
          number: 20001
        host: kiali.istio-system.svc.cluster.local
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: argocd-vs
  namespace: argocd
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: argocd
    match:
    - uri:
        prefix: "/argocd"
    route:
    - destination:
        port:
          number: 80
        host: argo-cd-argocd-server.argocd.svc.cluster.local
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: game-2048-vs
  namespace: game-2048
spec:
  hosts:
  - "kubernetes.patrick-cloud.com"
  gateways:
  - istio-system/patrick-cloud-gateway
  http:
  - name: game-2048
    match:
    - uri:
        prefix: "/game-2048/"
    rewrite:
       uri: "/"
    route:
    - destination:
        port:
          number: 80
        host: service-2048.game-2048.svc.cluster.local
---
# apiVersion: networking.istio.io/v1beta1
# kind: Sidecar
# metadata:
#   name: default
# spec:
#   outboundTrafficPolicy:
#     mode: REGISTRY_ONLY

---
# apiVersion: install.istio.io/v1alpha1
# kind: IstioOperator
# metadata:
#   name: default
#   namespace: istio-
# spec:
#   meshConfig:
#     defaultConfig:
#       tracing:
#         sampling: 50

# Ensure Mutual TLS for all pods
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: "default"
  namespace: "istio-system"
spec:
  mtls:
    mode: STRICT